{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "groupNumber": {
            "type": "int",
            "metadata": { 
                "Description" : "Group number for the slave set"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "Description": "Admin username used when provisioning virtual machines"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "uniqueStorageAccountName",
            "metadata": {
                "Description": "Unique namespace for the Storage Account where the Virtual Machine's disks will be placed"
            }
        },
        "region": {
            "type": "string",
            "defaultValue": "West US",
            "metadata": {
                "Description": "Location where resources will be provisioned"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "Description": "Virtual Network"
            }
        },
        "vmSizeSlaveNodes": {
            "type": "string",
            "defaultValue": "Standard_A3",
            "metadata": {
                "Description": "Size of the Slave nodes"
            }
        },
        "numberOfSlaves": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "Description": "Number of Slave nodes"
            }
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "Data",
            "metadata": {
                "Description": "Subnet name for the VNET that resources will be provisionined in to"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "Description": "Address space for the subnet"
            }
        },
        "sshKeyData": {
            "type": "string",
            "metadata": {
                "Description": "Public key for SSH authentication"
            }
        },
        "uuid": {
            "type": "string",
            "metadata": {
                "Description": "Globally unique cluster identifier in Azure namespace"
            }
        }
    },
  "variables": {
    "vmStorageAccountContainerName": "vhd",
    "vmSourceImageName": "2b171e93f07c4903bcad35bda10acf22__CoreOS-Beta-633.1.0",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
    "sourceImageName": "[concat('/', subscription().subscriptionId,'/services/images/',variables('vmSourceImageName'))]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "slaveCustomData": "[concat('#cloud-config\n\n', '{\"write_files\": [{\"content\": \"nameserver 168.63.129.16\", \"path\": \"/etc/resolv.conf\"}, {\"owner\": \"root\", \"path\": \"/etc/mesosphere/setup-flags/repository-url\", \"permissions\": 420, \"content\": \"http://s3.amazonaws.com/downloads.mesosphere.io/dcos/branches/azure/\"}, {\"path\": \"/etc/mesosphere/roles/slave\"}, {\"content\": \"{}\", \"path\": \"/etc/mesosphere/setup-packages/dcos-config--setup/pkginfo.json\"}, {\"content\": \"MESOS_MASTER=zk://leader.mesos:2181/mesos\\nMESOS_CONTAINERIZERS=docker,mesos\\nMESOS_LOG_DIR=/var/log/mesos\\nMESOS_EXECUTOR_REGISTRATION_TIMEOUT=5mins\\nMESOS_ISOLATION=cgroups/cpu,cgroups/mem\\nMESOS_WORK_DIR=/var/lib/mesos/slave\\nMESOS_RESOURCES=ports:[1025-2180,2182-3887,3889-5049,5052-8079,8082-65535]\\nMESOS_HOSTNAME=$private_ipv4\\nMESOS_IP=$private_ipv4\\n\", \"path\": \"/etc/mesosphere/setup-packages/dcos-config--setup/etc/mesos-slave\"}, {\"content\": \"MASTER_ELB=master0-', parameters('uuid'),'.westus.cloudapp.azure.com\\nFALLBACK_DNS=168.63.129.16\\n\", \"path\": \"/etc/mesosphere/setup-packages/dcos-config--setup/etc/cloudenv\"}], \"coreos\": {\"update\": {\"reboot-strategy\": \"off\"}, \"units\": [{\"command\": \"stop\", \"name\": \"systemd-resolved.service\", \"mask\": true}, {\"command\": \"stop\", \"name\": \"etcd.service\", \"mask\": true}, {\"command\": \"start\", \"content\": \"[Unit]\\nDescription=Write out dynamic config values\\n[Service]\\nType=oneshot\\nEnvironmentFile=/etc/environment\\n# Marathon depends on `hostname` resolution working\\nExecStart=/usr/bin/bash -c \\\"echo ${COREOS_PRIVATE_IPV4} $(hostname) > /etc/hosts\\\"\\n\", \"name\": \"config-writer.service\"}, {\"content\": \"[Unit]\\nDescription=Download the DCOS\\nAfter=network-online.target\\nWants=network-online.target\\nConditionPathExists=!/opt/mesosphere/\\n[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/curl http://s3.amazonaws.com/downloads.mesosphere.io/dcos/branches/azure/bootstrap.tar.xz -o /tmp/bootstrap.tar.xz\\nExecStartPre=/usr/bin/mkdir -p /opt/mesosphere\\nExecStart=/usr/bin/tar -xf /tmp/bootstrap.tar.xz -C /opt/mesosphere\\n\", \"name\": \"dcos-download.service\"}, {\"command\": \"start\", \"enable\": true, \"name\": \"dcos-setup.service\", \"content\": \"[Unit]\\nDescription=Prep the Pkgpanda working directories for this host.\\nRequires=dcos-download.service\\nAfter=dcos-download.service\\n[Service]\\nType=oneshot\\nEnvironmentFile=/opt/mesosphere/environment\\nExecStart=/opt/mesosphere/bin/pkgpanda setup\\n[Install]\\nWantedBy=multi-user.target\\n\"}]}}')]",
    "storageAcctName" :  "[concat(parameters('storageAccountName'),parameters('groupNumber')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2014-12-01-preview",
      "location": "[parameters('region')]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('slavePublicIP', parameters('groupNumber'), '-', copyindex())]",
      "copy": {
        "name": "ipLoop",
        "count": "[parameters('numberOfSlaves')]"
      },
      "location": "[parameters('region')]",
      "apiVersion": "2014-12-01-preview",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat('slave', parameters('groupNumber'), '-', copyindex(), '-', parameters('uuid'))]"
        }
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('slaveNodeNic', parameters('groupNumber'), '-', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "slaveNodesNicLoop",
        "count": "[parameters('numberOfSlaves')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', 'slavePublicIP', parameters('groupNumber'), '-', copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat('slavePublicIP', parameters('groupNumber'), '-', copyindex()))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2014-12-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('slave', parameters('groupNumber'), '-', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "slaveVmLoop",
        "count": "[parameters('numberOfSlaves')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', 'slaveNodeNic', parameters('groupNumber'), '-', copyindex())]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSizeSlaveNodes')]"
        },
        "osProfile": {
          "computername": "[concat('slave', parameters('groupNumber'), '_', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "customData":  "[base64(variables('slaveCustomData'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "sourceImage": {
            "id": "[variables('sourceImageName')]"
          },
          "destinationVhdsContainer": "[concat('http://', variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[concat('Microsoft.Network/networkInterfaces/', 'slaveNodeNic', parameters('groupNumber'), '-', copyindex())]"
            }
          ]
        }
      }
    }
  ]
}
